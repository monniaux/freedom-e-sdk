# File generated by CompCert 3.6
# Command line: -S -o ntt.S ntt.c
	.option nopic
	.section	.rodata
	.balign 1
__stringlit_4:
	.ascii	"root of unit = %lu\012\000"
	.type	__stringlit_4, @object
	.size	__stringlit_4, . - __stringlit_4
	.section	.rodata
	.balign 1
__stringlit_6:
	.ascii	"start clock\012\000"
	.type	__stringlit_6, @object
	.size	__stringlit_6, . - __stringlit_6
	.section	.rodata
	.balign 1
__stringlit_2:
	.ascii	"ntt.c\000"
	.type	__stringlit_2, @object
	.size	__stringlit_2, . - __stringlit_2
	.section	.rodata
	.balign 1
__stringlit_5:
	.ascii	"randm\012\000"
	.type	__stringlit_5, @object
	.size	__stringlit_5, . - __stringlit_5
	.section	.rodata
	.balign 1
__stringlit_7:
	.ascii	"compare = %d\012\000"
	.type	__stringlit_7, @object
	.size	__stringlit_7, . - __stringlit_7
	.section	.rodata
	.balign 1
__stringlit_1:
	.ascii	"(x1 * a0) % b0 == 1\000"
	.type	__stringlit_1, @object
	.size	__stringlit_1, . - __stringlit_1
	.text
	.balign 2
_fft:
	mv	x30, x2
	addi	x2, x2, -48
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	sw	x18, 16(x2)
	sw	x19, 20(x2)
	sw	x20, 24(x2)
	sw	x21, 28(x2)
	sw	x22, 32(x2)
	mv	x18, x15
	mv	x19, x14
	mv	x9, x13
	mv	x20, x12
	mv	x21, x11
	mv	x8, x10
	bgeu	x18, x19, .L100
	mv	x12, x21
	mul	x28, x21, x12
	slli	x15, x18, 1
	mv	x14, x19
	mv	x13, x20
	remu	x22, x28, x8
	mv	x12, x9
	mv	x11, x22
	mv	x10, x8
	call	_fft
	slli	x10, x18, 2
	add	x12, x9, x10
	add	x13, x20, x10
	slli	x15, x18, 1
	mv	x14, x19
	mv	x11, x22
	mv	x10, x8
	call	_fft
	addi	x6, x0, 1
	addi	x14, x0, 0
.L101:
	bgeu	x14, x19, .L100
	add	x12, x14, x18
	slli	x12, x12, 2
	add	x28, x9, x12
	lw	x17, 0(x28)
	mul	x15, x6, x17
	slli	x29, x14, 2
	add	x11, x9, x29
	remu	x7, x15, x8
	lw	x16, 0(x11)
	add	x12, x16, x7
	remu	x5, x12, x8
	srli	x10, x14, 1
	slli	x16, x10, 2
	add	x13, x20, x16
	sw	x5, 0(x13)
	lw	x15, 0(x11)
	sub	x29, x8, x7
	add	x10, x15, x29
	remu	x13, x10, x8
	add	x7, x14, x19
	srli	x5, x7, 1
	slli	x7, x5, 2
	add	x7, x20, x7
	sw	x13, 0(x7)
	mul	x30, x6, x21
	remu	x6, x30, x8
	slli	x5, x18, 1
	add	x14, x14, x5
	j	.L101
.L100:
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x18, 16(x2)
	lw	x19, 20(x2)
	lw	x20, 24(x2)
	lw	x21, 28(x2)
	lw	x22, 32(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 48
	jr	x1
	.type	_fft, @function
	.size	_fft, . - _fft
	.data
	.balign 4
state:
	.long	66
	.type	state, @object
	.size	state, . - state
	.text
	.balign 2
	.globl randm
randm:
	mv	x30, x2
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	lui	x31, %hi(state)
	lw	x7, %lo(state)(x31)
	addi	x16, x0, 29
	mul	x5, x7, x16
	mulhu	x13, x7, x16
	slli	x14, x7, 31
	add	x6, x13, x14
	addi	x12, x0, 0
	lui	x11, 2
	addi	x11, x11, 23
	add	x31, x5, x11
	sltu	x1, x31, x11
	add	x15, x6, x12
	add	x15, x15, x1
	mv	x11, x31
	lui	x31, %hi(state)
	sw	x11, %lo(state)(x31)
	remu	x10, x11, x10
	lw	x1, 4(x2)
	addi	x2, x2, 16
	jr	x1
	.type	randm, @function
	.size	randm, . - randm
	.local	buf
	.comm	buf, 1024, 4
	.local	out
	.comm	out, 1024, 4
	.local	save
	.comm	save, 1024, 4
	.text
	.balign 2
	.globl main
main:
	mv	x30, x2
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	addi	x8, x0, 3
	lui	x10, %hi(__stringlit_4)
	addi	x10, x10, %lo(__stringlit_4)
	mv	x11, x8
	call	printf
	lui	x10, %hi(__stringlit_5)
	addi	x10, x10, %lo(__stringlit_5)
	call	printf
	addi	x9, x0, 0
.L102:
	addi	x10, x0, 257
	call	randm
	lui	x5, %hi(buf)
	addi	x5, x5, %lo(buf)
	slli	x14, x9, 2
	add	x17, x5, x14
	sw	x10, 0(x17)
	lui	x29, %hi(save)
	addi	x29, x29, %lo(save)
	add	x12, x29, x14
	sw	x10, 0(x12)
	addi	x9, x9, 1
	addi	x31, x0, 256
	bltu	x9, x31, .L102
	lui	x10, %hi(__stringlit_6)
	addi	x10, x10, %lo(__stringlit_6)
	call	printf
	call	clock_start
	lui	x10, %hi(out)
	addi	x10, x10, %lo(out)
	lui	x11, %hi(buf)
	addi	x11, x11, %lo(buf)
	addi	x12, x0, 1024
	call	memcpy
	addi	x10, x0, 257
	lui	x12, %hi(buf)
	addi	x12, x12, %lo(buf)
	lui	x13, %hi(out)
	addi	x13, x13, %lo(out)
	addi	x14, x0, 256
	addi	x15, x0, 1
	mv	x11, x8
	call	_fft
	lui	x10, %hi(out)
	addi	x10, x10, %lo(out)
	lui	x11, %hi(buf)
	addi	x11, x11, %lo(buf)
	addi	x12, x0, 1024
	call	memcpy
	addi	x7, x0, 257
	addi	x29, x0, 3
	addi	x15, x0, 3
	addi	x12, x0, 257
	addi	x5, x0, 0
	addi	x8, x0, 1
.L103:
	div	x11, x15, x12
	mv	x13, x12
	rem	x12, x15, x12
	mv	x15, x13
	mv	x6, x5
	mul	x28, x11, x5
	sub	x5, x8, x28
	mv	x8, x6
	addi	x31, x0, 1
	blt	x31, x15, .L103
	bge	x8, x0, .L104
	addi	x8, x8, 257
.L104:
	mul	x28, x8, x29
	remu	x30, x28, x7
	addi	x31, x0, 1
	beq	x30, x31, .L105
	lui	x10, %hi(__stringlit_2)
	addi	x10, x10, %lo(__stringlit_2)
	addi	x11, x0, 31
	addi	x12, x0, 0
	lui	x13, %hi(__stringlit_1)
	addi	x13, x13, %lo(__stringlit_1)
	call	__assert_func
.L105:
	addi	x10, x0, 257
	lui	x12, %hi(buf)
	addi	x12, x12, %lo(buf)
	lui	x13, %hi(out)
	addi	x13, x13, %lo(out)
	addi	x14, x0, 256
	addi	x15, x0, 1
	mv	x11, x8
	call	_fft
	call	clock_stop
	call	print_total_clock
	lui	x11, %hi(buf)
	addi	x11, x11, %lo(buf)
	addi	x12, x0, 257
	addi	x14, x0, 0
.L106:
	slli	x6, x14, 2
	add	x10, x11, x6
	lw	x7, 0(x10)
	beq	x7, x0, .L107
	sub	x30, x12, x7
	sw	x30, 0(x10)
.L107:
	addi	x14, x14, 1
	addi	x31, x0, 256
	bltu	x14, x31, .L106
	lui	x10, %hi(buf)
	addi	x10, x10, %lo(buf)
	lui	x11, %hi(save)
	addi	x11, x11, %lo(save)
	addi	x12, x0, 1024
	call	memcmp
	mv	x11, x10
	lui	x10, %hi(__stringlit_7)
	addi	x10, x10, %lo(__stringlit_7)
	call	printf
	addi	x10, x0, 0
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
	jr	x1
	.type	main, @function
	.size	main, . - main
