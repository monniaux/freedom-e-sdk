# File generated by CompCert 3.6
# Command line: -frtlblock -fprepass= list -S -o ntt.S ntt.c
	.option nopic
	.section	.rodata
	.balign 1
__stringlit_4:
	.ascii	"root of unit = %lu\012\000"
	.type	__stringlit_4, @object
	.size	__stringlit_4, . - __stringlit_4
	.section	.rodata
	.balign 1
__stringlit_6:
	.ascii	"start clock\012\000"
	.type	__stringlit_6, @object
	.size	__stringlit_6, . - __stringlit_6
	.section	.rodata
	.balign 1
__stringlit_2:
	.ascii	"ntt.c\000"
	.type	__stringlit_2, @object
	.size	__stringlit_2, . - __stringlit_2
	.section	.rodata
	.balign 1
__stringlit_5:
	.ascii	"randm\012\000"
	.type	__stringlit_5, @object
	.size	__stringlit_5, . - __stringlit_5
	.section	.rodata
	.balign 1
__stringlit_7:
	.ascii	"compare = %d\012\000"
	.type	__stringlit_7, @object
	.size	__stringlit_7, . - __stringlit_7
	.section	.rodata
	.balign 1
__stringlit_1:
	.ascii	"(x1 * a0) % b0 == 1\000"
	.type	__stringlit_1, @object
	.size	__stringlit_1, . - __stringlit_1
	.text
	.balign 2
_fft:
	mv	x30, x2
	addi	x2, x2, -64
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	sw	x18, 16(x2)
	sw	x19, 20(x2)
	sw	x20, 24(x2)
	sw	x21, 28(x2)
	sw	x22, 32(x2)
	sw	x23, 36(x2)
	sw	x24, 40(x2)
	sw	x25, 44(x2)
	sw	x26, 48(x2)
	sw	x27, 52(x2)
	mv	x21, x15
	mv	x18, x14
	mv	x20, x13
	mv	x22, x12
	mv	x8, x11
	mv	x19, x10
	bgeu	x21, x18, .L100
	mv	x7, x8
	mul	x17, x8, x7
	slli	x15, x21, 1
	slli	x13, x21, 2
	remu	x27, x17, x19
	add	x26, x20, x13
	add	x25, x22, x13
	mv	x24, x15
	addi	x9, x0, 1
	addi	x23, x0, 0
	mv	x14, x18
	mv	x13, x22
	mv	x12, x20
	mv	x11, x27
	mv	x10, x19
	call	_fft
	mv	x15, x24
	mv	x14, x18
	mv	x13, x25
	mv	x12, x26
	mv	x11, x27
	mv	x10, x19
	call	_fft
.L101:
	bgeu	x23, x18, .L100
	add	x30, x23, x21
	slli	x28, x30, 2
	add	x10, x20, x28
	lw	x10, 0(x10)
	mul	x5, x9, x10
	slli	x15, x23, 2
	add	x6, x20, x15
	lw	x15, 0(x6)
	remu	x5, x5, x19
	srli	x17, x23, 1
	slli	x28, x17, 2
	add	x29, x22, x28
	add	x12, x15, x5
	remu	x11, x12, x19
	mul	x7, x9, x8
	sw	x11, 0(x29)
	lw	x14, 0(x6)
	sub	x16, x19, x5
	add	x6, x14, x16
	remu	x16, x6, x19
	mv	x12, x19
	remu	x9, x7, x12
	add	x11, x23, x18
	srli	x11, x11, 1
	slli	x7, x11, 2
	add	x6, x22, x7
	slli	x14, x21, 1
	sw	x16, 0(x6)
	add	x23, x23, x14
	j	.L101
.L100:
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x18, 16(x2)
	lw	x19, 20(x2)
	lw	x20, 24(x2)
	lw	x21, 28(x2)
	lw	x22, 32(x2)
	lw	x23, 36(x2)
	lw	x24, 40(x2)
	lw	x25, 44(x2)
	lw	x26, 48(x2)
	lw	x27, 52(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 64
	jr	x1
	.type	_fft, @function
	.size	_fft, . - _fft
	.data
	.balign 4
state:
	.long	66
	.type	state, @object
	.size	state, . - state
	.text
	.balign 2
	.globl randm
randm:
	mv	x30, x2
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	lui	x31, %hi(state)
	lw	x13, %lo(state)(x31)
	addi	x14, x0, 29
	mul	x5, x13, x14
	mulhu	x6, x13, x14
	addi	x12, x0, 0
	slli	x15, x13, 31
	lui	x11, 2
	addi	x11, x11, 23
	add	x13, x6, x15
	add	x7, x5, x11
	sltu	x1, x7, x11
	add	x16, x13, x12
	add	x16, x16, x1
	lui	x31, %hi(state)
	sw	x7, %lo(state)(x31)
	remu	x10, x7, x10
	lw	x1, 4(x2)
	addi	x2, x2, 16
	jr	x1
	.type	randm, @function
	.size	randm, . - randm
	.local	buf
	.comm	buf, 1024, 4
	.local	out
	.comm	out, 1024, 4
	.local	save
	.comm	save, 1024, 4
	.text
	.balign 2
	.globl main
main:
	mv	x30, x2
	addi	x2, x2, -32
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	sw	x18, 16(x2)
	sw	x19, 20(x2)
	sw	x20, 24(x2)
	addi	x18, x0, 3
	lui	x10, %hi(__stringlit_4)
	addi	x10, x10, %lo(__stringlit_4)
	lui	x8, %hi(__stringlit_5)
	addi	x8, x8, %lo(__stringlit_5)
	mv	x11, x18
	call	printf
	mv	x10, x8
	call	printf
	addi	x8, x0, 0
.L102:
	addi	x10, x0, 257
	call	randm
	lui	x17, %hi(buf)
	addi	x17, x17, %lo(buf)
	slli	x7, x8, 2
	lui	x11, %hi(save)
	addi	x11, x11, %lo(save)
	add	x6, x17, x7
	add	x7, x11, x7
	addi	x8, x8, 1
	sw	x10, 0(x6)
	sw	x10, 0(x7)
	addi	x31, x0, 256
	bltu	x8, x31, .L102
	lui	x10, %hi(__stringlit_6)
	addi	x10, x10, %lo(__stringlit_6)
	lui	x9, %hi(out)
	addi	x9, x9, %lo(out)
	call	printf
	lui	x8, %hi(buf)
	addi	x8, x8, %lo(buf)
	call	clock_start
	addi	x12, x0, 1024
	lui	x20, %hi(buf)
	addi	x20, x20, %lo(buf)
	lui	x19, %hi(out)
	addi	x19, x19, %lo(out)
	mv	x11, x8
	mv	x10, x9
	call	memcpy
	addi	x10, x0, 257
	addi	x14, x0, 256
	addi	x15, x0, 1
	lui	x9, %hi(out)
	addi	x9, x9, %lo(out)
	lui	x8, %hi(buf)
	addi	x8, x8, %lo(buf)
	mv	x13, x19
	mv	x12, x20
	mv	x11, x18
	call	_fft
	addi	x12, x0, 1024
	addi	x18, x0, 257
	addi	x19, x0, 3
	mv	x11, x8
	mv	x10, x9
	call	memcpy
	addi	x14, x0, 3
	addi	x15, x0, 257
	addi	x5, x0, 0
	addi	x8, x0, 1
.L103:
	div	x16, x14, x15
	mv	x13, x15
	rem	x15, x14, x15
	mv	x14, x13
	mv	x6, x5
	mul	x16, x16, x5
	sub	x5, x8, x16
	mv	x8, x6
	addi	x31, x0, 1
	blt	x31, x14, .L103
	bge	x8, x0, .L104
	addi	x8, x8, 257
.L104:
	mul	x29, x8, x19
	remu	x11, x29, x18
	addi	x31, x0, 1
	beq	x11, x31, .L105
	lui	x10, %hi(__stringlit_2)
	addi	x10, x10, %lo(__stringlit_2)
	lui	x13, %hi(__stringlit_1)
	addi	x13, x13, %lo(__stringlit_1)
	addi	x11, x0, 36
	addi	x12, x0, 0
	call	__assert_func
.L105:
	mv	x11, x8
	lui	x12, %hi(buf)
	addi	x12, x12, %lo(buf)
	lui	x13, %hi(out)
	addi	x13, x13, %lo(out)
	addi	x10, x0, 257
	addi	x14, x0, 256
	addi	x15, x0, 1
	call	_fft
	call	clock_stop
	call	print_total_clock
	lui	x30, %hi(buf)
	addi	x30, x30, %lo(buf)
	addi	x28, x0, 257
	addi	x29, x0, 0
.L106:
	slli	x17, x29, 2
	add	x11, x30, x17
	lw	x12, 0(x11)
	beq	x12, x0, .L107
	sub	x12, x28, x12
	sw	x12, 0(x11)
.L107:
	addi	x29, x29, 1
	addi	x31, x0, 256
	bltu	x29, x31, .L106
	lui	x10, %hi(buf)
	addi	x10, x10, %lo(buf)
	lui	x11, %hi(save)
	addi	x11, x11, %lo(save)
	addi	x12, x0, 1024
	call	memcmp
	lui	x11, %hi(__stringlit_7)
	addi	x11, x11, %lo(__stringlit_7)
	addi	x8, x0, 0
	mv	x14, x10
	mv	x10, x11
	mv	x11, x14
	call	printf
	mv	x10, x8
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x18, 16(x2)
	lw	x19, 20(x2)
	lw	x20, 24(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 32
	jr	x1
	.type	main, @function
	.size	main, . - main
