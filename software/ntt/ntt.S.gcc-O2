	.file	"ntt.c"
	.option nopic
	.attribute arch, "rv32i2p0_m2p0_a2p0_c2p0"
	.attribute unaligned_access, 0
	.attribute stack_align, 16
	.text
	.section	.text._fft,"ax",@progbits
	.align	1
	.globl	_fft
	.type	_fft, @function
_fft:
	bltu	a5,a4,.L13
	ret
.L13:
	addi	sp,sp,-48
	sw	s8,8(sp)
	mul	s8,a1,a1
	sw	s4,24(sp)
	sw	s7,12(sp)
	slli	s4,a5,1
	mv	s7,a3
	sw	s2,32(sp)
	sw	s3,28(sp)
	sw	s6,16(sp)
	mv	a3,a2
	mv	s2,a2
	remu	s8,s8,a0
	mv	s6,a5
	mv	a2,s7
	mv	a5,s4
	mv	s3,a1
	sw	s0,40(sp)
	sw	s1,36(sp)
	sw	s5,20(sp)
	mv	s1,a4
	sw	ra,44(sp)
	mv	s0,a0
	slli	s5,s6,2
	mv	a1,s8
	call	_fft
	mv	a5,s4
	mv	a4,s1
	add	a3,s2,s5
	add	a2,s7,s5
	mv	a1,s8
	mv	a0,s0
	call	_fft
	beq	s1,zero,.L1
	slli	a2,s6,3
	mv	a3,s7
	li	a4,0
	li	a5,1
.L3:
	add	a1,a3,s5
	lw	a0,0(a1)
	mul	a1,s3,a5
	lw	a7,0(a3)
	srli	t3,a4,1
	add	a6,s1,a4
	add	t1,s0,a7
	slli	t3,t3,2
	srli	a6,a6,1
	add	t3,s2,t3
	slli	a6,a6,2
	add	a6,s2,a6
	mul	a5,a5,a0
	add	a4,a4,s4
	add	a3,a3,a2
	remu	a5,a5,s0
	add	a7,a7,a5
	remu	a7,a7,s0
	sub	a5,t1,a5
	remu	a5,a5,s0
	sw	a7,0(t3)
	sw	a5,0(a6)
	remu	a5,a1,s0
	bgtu	s1,a4,.L3
.L1:
	lw	ra,44(sp)
	lw	s0,40(sp)
	lw	s1,36(sp)
	lw	s2,32(sp)
	lw	s3,28(sp)
	lw	s4,24(sp)
	lw	s5,20(sp)
	lw	s6,16(sp)
	lw	s7,12(sp)
	lw	s8,8(sp)
	addi	sp,sp,48
	jr	ra
	.size	_fft, .-_fft
	.section	.text.randm,"ax",@progbits
	.align	1
	.globl	randm
	.type	randm, @function
randm:
	lui	a4,%hi(.LANCHOR0)
	addi	a4,a4,%lo(.LANCHOR0)
	lw	a3,0(a4)
	slli	a5,a3,3
	sub	a5,a5,a3
	slli	a5,a5,2
	add	a5,a5,a3
	li	a3,8192
	addi	a3,a3,23
	add	a5,a5,a3
	sw	a5,0(a4)
	remu	a0,a5,a0
	ret
	.size	randm, .-randm
	.section	.text.startup.main,"ax",@progbits
	.align	1
	.globl	main
	.type	main, @function
main:
	lui	a0,%hi(.LC0)
	addi	sp,sp,-32
	li	a1,3
	addi	a0,a0,%lo(.LC0)
	sw	ra,28(sp)
	sw	s0,24(sp)
	sw	s1,20(sp)
	sw	s2,16(sp)
	sw	s3,12(sp)
	sw	s4,8(sp)
	sw	s5,4(sp)
	sw	s6,0(sp)
	call	printf
	lui	a0,%hi(.LC1)
	addi	a0,a0,%lo(.LC1)
	call	puts
	lui	a6,%hi(.LANCHOR0)
	addi	a6,a6,%lo(.LANCHOR0)
	lui	s2,%hi(.LANCHOR1)
	lw	a5,0(a6)
	addi	s4,s2,%lo(.LANCHOR1)
	lui	s3,%hi(.LANCHOR2)
	li	a1,8192
	addi	a2,s3,%lo(.LANCHOR2)
	addi	s0,s4,1024
	addi	s1,s2,%lo(.LANCHOR1)
	addi	a3,s2,%lo(.LANCHOR1)
	addi	a1,a1,23
	li	a0,257
.L16:
	slli	a4,a5,3
	sub	a4,a4,a5
	slli	a4,a4,2
	add	a5,a4,a5
	add	a5,a5,a1
	remu	a4,a5,a0
	addi	a3,a3,4
	addi	a2,a2,4
	sw	a4,-4(a3)
	sw	a4,-4(a2)
	bne	s0,a3,.L16
	lui	a0,%hi(.LC2)
	addi	a0,a0,%lo(.LC2)
	lui	s5,%hi(.LANCHOR3)
	sw	a5,0(a6)
	call	puts
	addi	s6,s5,%lo(.LANCHOR3)
	mv	a5,s1
	addi	a4,s5,%lo(.LANCHOR3)
.L17:
	lw	a0,0(a5)
	lw	a1,4(a5)
	lw	a2,8(a5)
	lw	a3,12(a5)
	sw	a0,0(a4)
	sw	a1,4(a4)
	sw	a2,8(a4)
	sw	a3,12(a4)
	addi	a5,a5,16
	addi	a4,a4,16
	bne	a5,s0,.L17
	call	clock_start
	li	a5,1
	li	a4,256
	addi	a3,s5,%lo(.LANCHOR3)
	addi	a2,s2,%lo(.LANCHOR1)
	li	a1,3
	li	a0,257
	call	_fft
	call	clock_stop
	mv	a5,s6
.L18:
	lw	a1,0(s1)
	lw	a2,4(s1)
	lw	a3,8(s1)
	lw	a4,12(s1)
	sw	a1,0(a5)
	sw	a2,4(a5)
	sw	a3,8(a5)
	sw	a4,12(a5)
	addi	s1,s1,16
	addi	a5,a5,16
	bne	s1,s0,.L18
	li	a2,1
	li	a1,0
	li	a3,257
	li	a4,3
	li	a6,1
	j	.L19
.L24:
	mv	a1,a5
	mv	a3,a0
.L19:
	div	a5,a4,a3
	mul	a5,a5,a1
	rem	a0,a4,a3
	sub	a5,a2,a5
	mv	a4,a3
	mv	a2,a1
	bgt	a3,a6,.L24
	blt	a1,zero,.L33
.L20:
	slli	a5,a1,1
	add	a5,a5,a1
	li	a3,257
	li	a4,1
	remu	a5,a5,a3
	bne	a5,a4,.L34
	li	a4,256
	li	a5,1
	addi	a3,s5,%lo(.LANCHOR3)
	addi	a2,s2,%lo(.LANCHOR1)
	li	a0,257
	call	_fft
	call	print_total_clock
	li	a4,257
.L23:
	lw	a5,0(s4)
	beq	a5,zero,.L22
	sub	a5,a4,a5
	sw	a5,0(s4)
.L22:
	addi	s4,s4,4
	bne	s0,s4,.L23
	addi	a1,s3,%lo(.LANCHOR2)
	li	a2,1024
	addi	a0,s2,%lo(.LANCHOR1)
	call	memcmp
	mv	a1,a0
	lui	a0,%hi(.LC5)
	addi	a0,a0,%lo(.LC5)
	call	printf
	lw	ra,28(sp)
	lw	s0,24(sp)
	lw	s1,20(sp)
	lw	s2,16(sp)
	lw	s3,12(sp)
	lw	s4,8(sp)
	lw	s5,4(sp)
	lw	s6,0(sp)
	li	a0,0
	addi	sp,sp,32
	jr	ra
.L33:
	addi	a1,a1,257
	j	.L20
.L34:
	lui	a3,%hi(.LC3)
	lui	a2,%hi(.LANCHOR4)
	lui	a0,%hi(.LC4)
	addi	a3,a3,%lo(.LC3)
	addi	a2,a2,%lo(.LANCHOR4)
	li	a1,40
	addi	a0,a0,%lo(.LC4)
	call	__assert_func
	.size	main, .-main
	.section	.bss.buf.3387,"aw",@nobits
	.align	2
	.set	.LANCHOR1,. + 0
	.type	buf.3387, @object
	.size	buf.3387, 1024
buf.3387:
	.zero	1024
	.section	.bss.out.3388,"aw",@nobits
	.align	2
	.set	.LANCHOR3,. + 0
	.type	out.3388, @object
	.size	out.3388, 1024
out.3388:
	.zero	1024
	.section	.bss.save.3389,"aw",@nobits
	.align	2
	.set	.LANCHOR2,. + 0
	.type	save.3389, @object
	.size	save.3389, 1024
save.3389:
	.zero	1024
	.section	.rodata.main.str1.4,"aMS",@progbits,1
	.align	2
.LC0:
	.string	"root of unit = %lu\n"
.LC1:
	.string	"randm"
	.zero	2
.LC2:
	.string	"start clock"
.LC3:
	.string	"(x1 * a0) % b0 == 1"
.LC4:
	.string	"ntt.c"
	.zero	2
.LC5:
	.string	"compare = %d\n"
	.section	.sdata.state.3382,"aw"
	.align	2
	.set	.LANCHOR0,. + 0
	.type	state.3382, @object
	.size	state.3382, 4
state.3382:
	.word	66
	.section	.sdata2.__func__.3288,"a"
	.align	2
	.set	.LANCHOR4,. + 0
	.type	__func__.3288, @object
	.size	__func__.3288, 5
__func__.3288:
	.string	"invm"
	.ident	"GCC: (SiFive GCC 8.3.0-2019.08.0) 8.3.0"
